@page "/weather"
@using MudBlazor
@using WeatherApp.Shared.Model
@using WeatherApp.Shared.Services
@inject IWeatherService WeatherService
@inject IWeatherDataService WeatherDataService
@inject NavigationManager Navigation

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<MudContainer MaxWidth="MaxWidth.Small">
    <MudPaper Class="pa-4">
        <MudText Typo="Typo.h4">Weather Forecast</MudText>
        <MudTextField @bind-Value="city" Label="City" Variant="Variant.Outlined" />
        <MudButton OnClick="GetWeather" Color="Color.Primary">Get Weather</MudButton>

        @if (@weatherData == null)
        {
            <MudText Typo="Typo.body1"><em>Loading...</em></MudText>
        }
        else
        {
            <MudText Typo="Typo.body1">Date and Time: @weatherData.Periods[0].StartTime</MudText>
            <MudImage Src="@weatherData.Periods[0].Icon" Alt="Weather Icon" Width="100" Height="100" Elevation="25" Class="rounded-lg" />
            <MudText Typo="Typo.body1">Temperature: @weatherData.Periods[0].Temperature &deg;F</MudText>
            <MudText Typo="Typo.body1">Weather: @weatherData.Periods[0].ShortForecast</MudText>
            <MudButton OnClick="@(() => AddWeatherRecord())" Color="Color.Secondary">Add</MudButton>
        }
    </MudPaper>
</MudContainer>
<br/>
<MudContainer MaxWidth="MaxWidth.Small">
    <MudPaper Class="pa-4">
        <MudText Typo="Typo.h4">Weather Records:</MudText>
        @if (@weatherRecords.Count < 1)
        {
            <MudText Typo="Typo.body1"><em>No Weather Records Saved...</em></MudText>
        }
        else
        {
            <MudTable Items="@weatherRecords" Hover="true">
                <HeaderContent>
                    <MudTh>Start Time</MudTh>
                    <MudTh>Icon</MudTh>
                    <MudTh>Temperature</MudTh>
                    <MudTh>Short Forecast</MudTh>
                    <MudTh>Actions</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>@context.StartTime</MudTd>
                    <MudTd><MudImage Src="@context.Icon" Alt="Weather Icon" Width="100" Height="100" Elevation="25" Class="rounded-lg" /></MudTd>
                    <MudTd>@context.Temperature</MudTd>
                    <MudTd>@context.ShortForecast</MudTd>
                    <MudTd>
                        <MudButton OnClick="@(() => EditWeatherRecord(context.Id))" Color="Color.Secondary">Edit</MudButton>
                        <MudButton OnClick="@(() => DeleteWeatherRecord(context.Id))" Color="Color.Error">Delete</MudButton>
                    </MudTd>
                </RowTemplate>
            </MudTable>
        }
    </MudPaper>
</MudContainer>

@code {
    private string city = "chicago";
    private WeatherData? weatherData;

    private List<WeatherRecord> weatherRecords = new();
    
    private async Task GetWeather()
    {
        weatherData = null;
        weatherData = await WeatherService.GetWeatherAsync(city);
    }

    protected override async Task OnInitializedAsync()
    {
        weatherRecords = await WeatherDataService.GetWeatherRecordsAsync();
    }

    private async Task AddWeatherRecord()
    {
        var newWeatherRecord = new WeatherRecord()
        { 
            Id = Guid.NewGuid(),
			StartTime = weatherData.Periods[0].StartTime,
			Icon = weatherData.Periods[0].Icon,
			Temperature = weatherData.Periods[0].Temperature,
			ShortForecast = weatherData.Periods[0].ShortForecast
        };

        await WeatherDataService.AddWeatherRecordAsync(newWeatherRecord);
        weatherRecords = await WeatherDataService.GetWeatherRecordsAsync();
    }

    private async Task EditWeatherRecord(Guid id)
    {
        Navigation.NavigateTo($"/editweather/{id}");
    }

    private async Task DeleteWeatherRecord(Guid id)
    {
        await WeatherDataService.DeleteWeatherRecordAsync(id);
        weatherRecords = await WeatherDataService.GetWeatherRecordsAsync();
    }
}
